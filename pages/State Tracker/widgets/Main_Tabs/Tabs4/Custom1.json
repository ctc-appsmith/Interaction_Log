{
    "needsErrorInfo": false,
    "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
    "mobileBottomRow": 76,
    "widgetName": "Custom1",
    "borderColor": "#E0DEDE",
    "srcDoc": {
        "css": ".app {\n  width: calc(1px * var(--appsmith-ui-width));\n  justify-content: center;\n  border-radius: 0px;\n  border: none;\n}\n.app .tip-container {\n  margin-bottom: 20px;\n}\n.app .tip-container h2 {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 700;\n}\n.app .tip-container .tip-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n}\n.app .tip-container .tip-header div {\n  color: #999;\n}\n.app .button-container {\n  text-align: right;\n}\n.app .button-container button {\n  margin: 0 10px;\n  border-radius: var(--appsmith-theme-borderRadius) !important;\n}\n.app .button-container button.primary {\n  background: var(--appsmith-theme-primaryColor) !important;\n}\n.app .button-container button.reset:not([disabled]) {\n  color: var(--appsmith-theme-primaryColor) !important;\n  border-color: var(--appsmith-theme-primaryColor) !important;\n}",
        "js": "appsmith.onReady(() => {\n  var chartDom = document.getElementById('main');\n  var myChart = echarts.init(chartDom);\n  var option;\n\n  // There should not be negative values in rawData\n  const rawData = [[0, 0, 0, 0, 231, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 231, 231]];\n  const totalData = [];\n  for (let i = 0; i < rawData[0].length; ++i) {\n    let sum = 0;\n    for (let j = 0; j < rawData.length; ++j) {\n      sum += rawData[j][i];\n    }\n    totalData.push(sum);\n  }\n  const grid = {\n    left: 125,\n    right: 125,\n    top: 50,\n    bottom: 50\n  };\n  const series = ['Pending', 'In Progress', 'Needs Review', 'Complete'].map((name, sid) => {\n    return {\n      name,\n      type: 'bar',\n      stack: 'total',\n      barWidth: '60%',\n      label: {\n        show: true,\n        formatter: params => Math.round(params.value * 1000) / 10 + '%'\n      },\n      data: rawData[sid].map((d, did) => totalData[did] <= 0 ? 0 : d / totalData[did])\n    };\n  });\n  option = {\n    legend: {\n      selectedMode: false\n    },\n    grid,\n    xAxis: {\n      type: 'value'\n    },\n    yAxis: {\n      type: 'category',\n      data: ['Technical', 'States', 'Project Manager', 'Negotiation', 'Grants', 'Analytics']\n    },\n    series\n  };\n  console.log(option);\n  option && myChart.setOption(option);\n});\nappsmith.onModelChange(() => {\n  console.log('model updated');\n});",
        "html": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Task Status by Team<\/title>\n<script src=\"https://cdn.jsdelivr.net/npm/echarts@5.5.1/dist/echarts.min.js\"><\/script>\n\t\t<script\nsrc=\"https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js\"><\/script>\n  <\/head>\n  <body>\n    <!-- Prepare a DOM with a defined width and height for ECharts -->\n    <div id=\"main\" style=\"width: 1000px;height:400px;\"><\/div>\n    <script type=\"text/javascript\">\n      // Initialize the echarts instance based on the prepared dom\n      var myChart = echarts.init(document.getElementById('main'));\n\n      // Specify the configuration items and data for the chart\n      var option = {\n        title: {\n          text: 'Task Status by Team'\n        },\n        tooltip: {},\n        legend: {\n          data: ['sales']\n        },\n        xAxis: {\n          data: ['Shirts', 'Cardigans', 'Chiffons', 'Pants', 'Heels', 'Socks']\n        },\n        yAxis: {},\n        series: [\n          {\n            name: 'sales',\n            type: 'bar',\n            data: [5, 20, 36, 10, 10, 20]\n          }\n        ]\n      };\n\n      // Display the chart using the configuration items and data just specified.\n      myChart.setOption(option);\n    <\/script>\n  <\/body>\n<\/html>"
    },
    "isCanvas": false,
    "displayName": "Custom",
    "iconSVG": "/static/media/icon.ff37253a5ce2f5284c42ede26ce165f9.svg",
    "searchTags": ["external"],
    "topRow": 11,
    "bottomRow": 55,
    "parentRowSpace": 10,
    "type": "CUSTOM_WIDGET",
    "hideCard": false,
    "mobileRightColumn": 32,
    "dynamicTriggerPathList": [{"key": "onResetClick"}],
    "parentColumnSpace": 18.609375,
    "dynamicBindingPathList": [
        {"key": "theme"},
        {"key": "borderRadius"},
        {"key": "boxShadow"}
    ],
    "leftColumn": 2,
    "defaultModel": "",
    "borderWidth": "1",
    "theme": "{{appsmith.theme}}",
    "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
    "events": ["onResetClick"],
    "key": "x51n7bgsdk",
    "backgroundColor": "#FFFFFF",
    "isDeprecated": false,
    "rightColumn": 46,
    "thumbnailSVG": "/static/media/thumbnail.a7d7cde44fad9a0d4d490def43560a78.svg",
    "dynamicHeight": "FIXED",
    "isSearchWildcard": true,
    "widgetId": "7r9uha65fq",
    "isVisible": true,
    "version": 1,
    "uncompiledSrcDoc": {
        "css": ".app {\n  width: calc(1px * var(--appsmith-ui-width));\n  justify-content: center;\n  border-radius: 0px;\n  border: none;\n  \n  .tip-container {\n    margin-bottom: 20px;\n\n    h2 {\n      margin-bottom: 20px;\n      font-size: 16px;\n      font-weight: 700;\n    }\n\n    .tip-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n\n      div {\n        color: #999;\n      }\n    }\n  }\n\t\n\t.button-container {\n      text-align: right;\n\n      button {\n        margin: 0 10px;\n        border-radius: var(--appsmith-theme-borderRadius) !important;\n\n        &.primary {\n          background: var(--appsmith-theme-primaryColor) !important;\n        }\n\n        &.reset:not([disabled]) {\n          color: var(--appsmith-theme-primaryColor) !important;\n          border-color: var(--appsmith-theme-primaryColor) !important;\n        }\n      }\n    }\n}\n",
        "js": "appsmith.onReady(()=>{\n\tvar chartDom = document.getElementById('main');\nvar myChart = echarts.init(chartDom);\nvar option;\n\n// There should not be negative values in rawData\nconst rawData = [\n  [0, 0, 0, 0, 231, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 231, 231]\n];\nconst totalData = [];\nfor (let i = 0; i < rawData[0].length; ++i) {\n  let sum = 0;\n  for (let j = 0; j < rawData.length; ++j) {\n    sum += rawData[j][i];\n  }\n  totalData.push(sum);\n}\nconst grid = {\n  left: 125,\n  right: 125,\n  top: 50,\n  bottom: 50\n};\nconst series = ['Pending', 'In Progress', 'Needs Review', 'Complete'].map(\n  (name, sid) => {\n    return {\n      name,\n      type: 'bar',\n      stack: 'total',\n      barWidth: '60%',\n      label: {\n        show: true,\n        formatter: (params) => Math.round(params.value * 1000) / 10 + '%'\n      },\n      data: rawData[sid].map((d, did) =>\n        totalData[did] <= 0 ? 0 : d / totalData[did]\n      )\n    };\n  }\n);\noption = {\n  legend: {\n    selectedMode: false\n  },\n  grid,\n  xAxis: {\n    type: 'value'\n  },\n  yAxis: {\n    type: 'category',\n    data: [\n      'Technical',\n\t\t\t'States',\n\t\t\t'Project Manager',\n\t\t\t'Negotiation',\n\t\t\t'Grants',\n\t\t\t'Analytics'\n    ]\n  },\n  series\n};\nconsole.log(option);\n\noption && myChart.setOption(option);\n\t\n})\n\nappsmith.onModelChange(()=>{\n\tconsole.log('model updated')\n})\n\n",
        "html": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Task Status by Team<\/title>\n<script src=\"https://cdn.jsdelivr.net/npm/echarts@5.5.1/dist/echarts.min.js\"><\/script>\n\t\t<script\nsrc=\"https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js\"><\/script>\n  <\/head>\n  <body>\n    <!-- Prepare a DOM with a defined width and height for ECharts -->\n    <div id=\"main\" style=\"width: 1000px;height:400px;\"><\/div>\n    <script type=\"text/javascript\">\n      // Initialize the echarts instance based on the prepared dom\n      var myChart = echarts.init(document.getElementById('main'));\n\n      // Specify the configuration items and data for the chart\n      var option = {\n        title: {\n          text: 'Task Status by Team'\n        },\n        tooltip: {},\n        legend: {\n          data: ['sales']\n        },\n        xAxis: {\n          data: ['Shirts', 'Cardigans', 'Chiffons', 'Pants', 'Heels', 'Socks']\n        },\n        yAxis: {},\n        series: [\n          {\n            name: 'sales',\n            type: 'bar',\n            data: [5, 20, 36, 10, 10, 20]\n          }\n        ]\n      };\n\n      // Display the chart using the configuration items and data just specified.\n      myChart.setOption(option);\n    <\/script>\n  <\/body>\n<\/html>"
    },
    "parentId": "y75bbu10t6",
    "tags": ["Display"],
    "renderMode": "CANVAS",
    "isLoading": false,
    "mobileTopRow": 46,
    "originalTopRow": 11,
    "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
    "mobileLeftColumn": 9,
    "maxDynamicHeight": 9000,
    "originalBottomRow": 55,
    "minDynamicHeight": 4
}